import { Abi } from 'abitype';
import { MulticallConfig, MulticallResult } from './multicall';
export declare type WatchMulticallConfig<TContracts extends unknown[]> = MulticallConfig<TContracts> & {
    listenToBlock?: boolean;
};
export declare type WatchMulticallCallback<TContracts extends unknown[]> = (results: MulticallResult<TContracts>) => void;
export declare function watchMulticall<TAbi extends Abi | readonly unknown[], TFunctionName extends string, TContracts extends {
    abi: TAbi;
    functionName: TFunctionName;
}[]>(config: WatchMulticallConfig<TContracts>, callback: WatchMulticallCallback<TContracts>): () => void;
