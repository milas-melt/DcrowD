import { FetchEnsNameArgs, FetchEnsNameResult } from '@wagmi/core';
import { QueryConfig } from '../../types';
export declare type UseEnsNameArgs = Partial<FetchEnsNameArgs>;
export declare type UseEnsNameConfig = QueryConfig<FetchEnsNameResult, Error>;
export declare const queryKey: ({ address, chainId }: Partial<FetchEnsNameArgs>) => readonly [{
    readonly entity: "ensName";
    readonly address: `0x${string}` | undefined;
    readonly chainId: number | undefined;
}];
export declare function useEnsName({ address, cacheTime, chainId: chainId_, enabled, staleTime, // 24 hours
suspense, onError, onSettled, onSuccess, }?: UseEnsNameArgs & UseEnsNameConfig): import("../utils/query/useQuery").UseQueryResult<FetchEnsNameResult, Error>;
