import { FetchBlockNumberArgs, FetchBlockNumberResult } from '@wagmi/core';
import { QueryConfig } from '../../types';
declare type UseBlockNumberArgs = Partial<FetchBlockNumberArgs> & {
    /** Function fires when a new block is created */
    onBlock?: (blockNumber: number) => void;
    /** Subscribe to changes */
    watch?: boolean;
};
export declare type UseBlockNumberConfig = QueryConfig<FetchBlockNumberResult, Error>;
export declare const queryKey: ({ chainId }: {
    chainId?: number | undefined;
}) => readonly [{
    readonly entity: "blockNumber";
    readonly chainId: number | undefined;
}];
export declare function useBlockNumber({ cacheTime, chainId: chainId_, enabled, staleTime, suspense, watch, onBlock, onError, onSettled, onSuccess, }?: UseBlockNumberArgs & UseBlockNumberConfig): import("../utils/query/useQuery").UseQueryResult<number, Error>;
export {};
