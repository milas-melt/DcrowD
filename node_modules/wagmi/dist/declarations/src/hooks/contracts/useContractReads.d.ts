import { ReadContractsConfig, ReadContractsResult } from '@wagmi/core';
import { Abi } from 'abitype';
import { QueryConfig } from '../../types';
export declare type UseContractReadsConfig<TContracts extends unknown[]> = ReadContractsConfig<TContracts, {
    isAbiOptional: true;
    isAddressOptional: true;
    isArgsOptional: true;
    isContractsOptional: true;
    isFunctionNameOptional: true;
}> & QueryConfig<ReadContractsResult<TContracts>, Error> & {
    /** If set to `true`, the cache will depend on the block number */
    cacheOnBlock?: boolean;
    /** Subscribe to changes */
    watch?: boolean;
};
export declare function useContractReads<TAbi extends Abi | readonly unknown[], TFunctionName extends string, TContracts extends {
    abi: TAbi;
    functionName: TFunctionName;
}[]>({ allowFailure, cacheOnBlock, cacheTime, contracts, overrides, enabled: enabled_, isDataEqual, keepPreviousData, onError, onSettled, onSuccess, select, staleTime, suspense, watch, }?: UseContractReadsConfig<TContracts>): import("../utils/query/useQuery").UseQueryResult<TContracts extends [] ? [] : TContracts extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head>] : TContracts extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T ? T extends [...Tail] ? T extends [] ? [] : T extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_1 ? T_1 extends [...Tail] ? T_1 extends [] ? [] : T_1 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_1 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_2 ? T_2 extends [...Tail] ? T_2 extends [] ? [] : T_2 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_2 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_3 ? T_3 extends [...Tail] ? T_3 extends [] ? [] : T_3 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_3 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_4 ? T_4 extends [...Tail] ? T_4 extends [] ? [] : T_4 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_4 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_5 ? T_5 extends [...Tail] ? T_5 extends [] ? [] : T_5 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_5 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_6 ? T_6 extends [...Tail] ? T_6 extends [] ? [] : T_6 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_6 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_7 ? T_7 extends [...Tail] ? T_7 extends [] ? [] : T_7 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_7 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_8 ? T_8 extends [...Tail] ? T_8 extends [] ? [] : T_8 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_8 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_9 ? T_9 extends [...Tail] ? T_9 extends [] ? [] : T_9 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_9 extends [infer Head_1, ...infer Tail] ? any : T_9 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_8 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_7 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_6 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_5 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_4 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_3 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_2 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_1 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : TContracts extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[], Error>;
