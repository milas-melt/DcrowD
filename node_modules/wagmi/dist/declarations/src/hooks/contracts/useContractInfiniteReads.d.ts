import { ReadContractsConfig, ReadContractsResult } from '@wagmi/core';
import { ContractsConfig } from '@wagmi/core/internal';
import { Abi } from 'abitype';
import { InfiniteQueryConfig } from '../../types';
export declare type UseContractInfiniteReadsConfig<TContracts extends unknown[] = unknown[], TPageParam = unknown> = Pick<ReadContractsConfig<TContracts>, 'allowFailure' | 'overrides'> & {
    cacheKey: string;
    contracts(pageParam: TPageParam): readonly [
        ...ContractsConfig<TContracts, {
            /** Chain id to use for provider */
            chainId?: number;
        }>
    ];
} & InfiniteQueryConfig<ReadContractsResult<TContracts>, Error>;
export declare function useContractInfiniteReads<TAbi extends Abi | readonly unknown[], TFunctionName extends string, TContracts extends {
    abi: TAbi;
    functionName: TFunctionName;
}[], TPageParam = any>({ allowFailure, cacheKey, cacheTime, contracts, enabled: enabled_, getNextPageParam, isDataEqual, keepPreviousData, onError, onSettled, onSuccess, overrides, select, staleTime, suspense, }: UseContractInfiniteReadsConfig<TContracts, TPageParam>): Pick<import("@tanstack/react-query").InfiniteQueryObserverResult<TContracts extends [] ? [] : TContracts extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head>] : TContracts extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T ? T extends [...Tail] ? T extends [] ? [] : T extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_1 ? T_1 extends [...Tail] ? T_1 extends [] ? [] : T_1 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_1 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_2 ? T_2 extends [...Tail] ? T_2 extends [] ? [] : T_2 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_2 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_3 ? T_3 extends [...Tail] ? T_3 extends [] ? [] : T_3 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_3 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_4 ? T_4 extends [...Tail] ? T_4 extends [] ? [] : T_4 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_4 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_5 ? T_5 extends [...Tail] ? T_5 extends [] ? [] : T_5 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_5 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_6 ? T_6 extends [...Tail] ? T_6 extends [] ? [] : T_6 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_6 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_7 ? T_7 extends [...Tail] ? T_7 extends [] ? [] : T_7 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_7 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_8 ? T_8 extends [...Tail] ? T_8 extends [] ? [] : T_8 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_8 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_9 ? T_9 extends [...Tail] ? T_9 extends [] ? [] : T_9 extends [infer Head] ? [import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head_1>, import("@wagmi/core").GetReturnType<Head>] : T_9 extends [infer Head_1, ...infer Tail] ? any : T_9 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_8 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_7 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_6 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_5 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_4 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_3 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_2 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T_1 extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : T extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[] : never : never : TContracts extends import("@wagmi/core").ContractConfig<infer _TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TAbi_1 extends readonly unknown[] | Abi extends Abi ? Extract<Extract<(infer TAbi_1 extends readonly unknown[] | Abi)[number], {
    type: "function";
    stateMutability: import("abitype").AbiStateMutability;
}>, {
    name: infer TFunctionName_1 extends string;
}> : never, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").GetReturnType<{
    abi: TAbi_1;
    functionName: TFunctionName_1;
}>[] : ({
    [x: string]: unknown;
} & readonly unknown[])[], Error>, "error" | "data" | "fetchStatus" | "isError" | "isFetched" | "isFetchedAfterMount" | "isFetching" | "isLoading" | "isRefetching" | "isSuccess" | "refetch" | "fetchNextPage" | "hasNextPage" | "isFetchingNextPage"> & {
    isIdle: boolean;
    status: "error" | "success" | "idle" | "loading";
    internal: Pick<import("@tanstack/react-query").InfiniteQueryObserverResult<unknown, unknown>, "failureCount" | "isPaused" | "dataUpdatedAt" | "errorUpdatedAt" | "isLoadingError" | "isPlaceholderData" | "isPreviousData" | "isRefetchError" | "isStale" | "remove">;
};
export declare function paginatedIndexesConfig<TAbi extends Abi | readonly unknown[], TFunctionName extends string, TContracts extends {
    abi: TAbi;
    functionName: TFunctionName;
}[]>(fn: UseContractInfiniteReadsConfig<TContracts>['contracts'], { perPage, start, direction, }: {
    perPage: number;
    start: number;
    direction: 'increment' | 'decrement';
}): {
    contracts: (pageParam: unknown) => readonly [...TContracts extends [] ? [] : TContracts extends [infer Head] ? [import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : TContracts extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T ? T extends [...Tail] ? T extends [] ? [] : T extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_1 ? T_1 extends [...Tail] ? T_1 extends [] ? [] : T_1 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_1 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_2 ? T_2 extends [...Tail] ? T_2 extends [] ? [] : T_2 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_2 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_3 ? T_3 extends [...Tail] ? T_3 extends [] ? [] : T_3 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_3 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_4 ? T_4 extends [...Tail] ? T_4 extends [] ? [] : T_4 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_4 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_5 ? T_5 extends [...Tail] ? T_5 extends [] ? [] : T_5 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_5 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_6 ? T_6 extends [...Tail] ? T_6 extends [] ? [] : T_6 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_6 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_7 ? T_7 extends [...Tail] ? T_7 extends [] ? [] : T_7 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_7 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_8 ? T_8 extends [...Tail] ? T_8 extends [] ? [] : T_8 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_8 extends [infer Head_1, ...infer Tail] ? [...Tail] extends infer T_9 ? T_9 extends [...Tail] ? T_9 extends [] ? [] : T_9 extends [infer Head] ? [import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head_1 & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>, import("@wagmi/core").GetConfig<Head & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "pure" | "view", import("@wagmi/core").DefaultOptions>] : T_9 extends [infer Head_1, ...infer Tail] ? any : unknown[] extends T_9 ? T_9 : T_9 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_8 ? T_8 : T_8 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_7 ? T_7 : T_7 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_6 ? T_6 : T_6 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_5 ? T_5 : T_5 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_4 ? T_4 : T_4 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_3 ? T_3 : T_3 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_2 ? T_2 : T_2 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T_1 ? T_1 : T_1 extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends T ? T : T extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[] : never : never : unknown[] extends TContracts ? TContracts : TContracts extends import("@wagmi/core").ContractConfig<infer TContract, infer TAbi_1 extends readonly unknown[] | Abi, infer TFunctionName_1 extends string, infer TFunction extends {
        constant?: boolean | undefined;
        gas?: number | undefined;
        payable?: boolean | undefined;
        stateMutability: import("abitype").AbiStateMutability;
    } & {
        type: "function";
        inputs: readonly import("abitype").AbiParameter[];
        name: string;
        outputs: readonly import("abitype").AbiParameter[];
    } & {
        type: "function";
    }, import("@wagmi/core").DefaultOptions>[] ? import("@wagmi/core").ContractConfig<Omit<TContract & {
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, TAbi_1, TFunctionName_1, TFunction, import("@wagmi/core").DefaultOptions>[] : import("@wagmi/core").ContractConfig<Omit<{
        /** Chain id to use for provider */
        chainId?: number | undefined;
    }, "functionName" | "args" | "abi">, Abi, string, never, import("@wagmi/core").DefaultOptions>[]];
    getNextPageParam(lastPage: unknown[], pages: unknown[]): number | undefined;
};
