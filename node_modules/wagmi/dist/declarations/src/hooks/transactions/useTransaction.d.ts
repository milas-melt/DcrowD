import { FetchTransactionArgs, FetchTransactionResult } from '@wagmi/core';
import { QueryConfig } from '../../types';
declare type UseTransactionArgs = Partial<FetchTransactionArgs>;
export declare type UseTransactionConfig = QueryConfig<FetchTransactionResult, Error>;
/**
 * @description Fetches transaction for hash
 *
 * @example
 * import { useTransaction } from 'wagmi'
 *
 * const result = useTransaction({
 *  chainId: 1,
 *  hash: '0x...',
 * })
 */
export declare function useTransaction({ cacheTime, chainId: chainId_, enabled, hash, staleTime, suspense, onError, onSettled, onSuccess, }?: UseTransactionArgs & UseTransactionConfig): import("../utils/query/useQuery").UseQueryResult<import("@ethersproject/providers").TransactionResponse, Error>;
export {};
