import { FetchSignerArgs, FetchSignerResult, Signer } from '@wagmi/core';
import { QueryConfig } from '../../types';
export declare type UseSignerConfig = Omit<QueryConfig<FetchSignerResult, Error>, 'cacheTime' | 'staleTime' | 'enabled'> & FetchSignerArgs;
export declare const queryKey: ({ chainId }: FetchSignerArgs) => readonly [{
    readonly entity: "signer";
    readonly chainId: number | undefined;
    readonly persist: false;
}];
export declare function useSigner<TSigner extends Signer>({ chainId: chainId_, suspense, onError, onSettled, onSuccess, }?: UseSignerConfig): import("../utils/query/useQuery").UseQueryResult<FetchSignerResult<TSigner>, Error>;
