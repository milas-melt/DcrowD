"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MoralisAuth = exports.BASE_URL = void 0;
var core_1 = require("@moralisweb3/core");
var requestMessage_1 = require("./methods/requestMessage");
var verify_1 = require("./methods/verify");
exports.BASE_URL = 'https://authapi.moralis.io';
var MoralisAuth = /** @class */ (function (_super) {
    __extends(MoralisAuth, _super);
    function MoralisAuth(core) {
        var _this = _super.call(this, MoralisAuth.moduleName, core, exports.BASE_URL) || this;
        _this.requestMessage = function (options) { return (0, requestMessage_1.makeRequestMessage)(_this.core)(options); };
        return _this;
    }
    MoralisAuth.create = function (core) {
        return new MoralisAuth(core !== null && core !== void 0 ? core : core_1.MoralisCoreProvider.getDefault());
    };
    MoralisAuth.prototype.setup = function () {
        // Nothing
    };
    MoralisAuth.prototype.start = function () {
        // Nothing
    };
    MoralisAuth.prototype.verify = function (options) {
        return (0, verify_1.makeVerify)(this.core)(options);
    };
    MoralisAuth.moduleName = 'auth';
    return MoralisAuth;
}(core_1.ApiModule));
exports.MoralisAuth = MoralisAuth;
//# sourceMappingURL=MoralisAuth.js.map