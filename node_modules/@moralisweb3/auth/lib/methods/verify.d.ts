import MoralisCore from '@moralisweb3/core';
export interface VerifyEvmOptions {
    networkType?: 'evm';
    /**
     * @deprecared use networkType instead
     */
    network?: 'evm';
    message: string;
    signature: string;
}
export interface VerifySolOptions {
    networkType: 'solana';
    /**
     * @deprecared use networkType instead
     */
    network?: 'solana';
    message: string;
    signature: string;
}
export declare type VerifyOptions = VerifyEvmOptions | VerifySolOptions;
export declare type VerifyEvmData = ReturnType<typeof makeEvmVerify>;
export declare type VerifySolData = ReturnType<typeof makeSolVerify>;
declare const makeEvmVerify: (core: MoralisCore, { networkType, network, ...options }: VerifyEvmOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    id: string;
    domain: string;
    chainId: "1" | "3" | "4" | "5" | "25" | "42" | "56" | "97" | "137" | "250" | "338" | "1337" | "43113" | "43114" | "80001";
    address: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    chain: import("@moralisweb3/evm-utils").EvmChain;
    address: import("@moralisweb3/evm-utils").EvmAddress;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    chain: string | number;
    address: string;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    message: string;
    signature: string;
}>>;
declare const makeSolVerify: (core: MoralisCore, { networkType, network, ...options }: VerifySolOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    id: string;
    domain: string;
    network: "mainnet" | "testnet" | "devnet";
    address: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    solNetwork: import("@moralisweb3/sol-utils").SolNetwork;
    address: import("@moralisweb3/sol-utils").SolAddress;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    solNetwork: import("@moralisweb3/core").MoralisDataFormatted;
    address: import("@moralisweb3/core").MoralisDataFormatted;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    message: string;
    signature: string;
}>>;
export declare const makeVerify: (core: MoralisCore) => (options: VerifyOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    id: string;
    domain: string;
    chainId: "1" | "3" | "4" | "5" | "25" | "42" | "56" | "97" | "137" | "250" | "338" | "1337" | "43113" | "43114" | "80001";
    address: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    chain: import("@moralisweb3/evm-utils").EvmChain;
    address: import("@moralisweb3/evm-utils").EvmAddress;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    chain: string | number;
    address: string;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    message: string;
    signature: string;
}> | import("@moralisweb3/api-utils").ApiResultAdapter<{
    id: string;
    domain: string;
    network: "mainnet" | "testnet" | "devnet";
    address: string;
    statement?: string | undefined;
    uri: string;
    expirationTime?: string | undefined;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    solNetwork: import("@moralisweb3/sol-utils").SolNetwork;
    address: import("@moralisweb3/sol-utils").SolAddress;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    solNetwork: import("@moralisweb3/core").MoralisDataFormatted;
    address: import("@moralisweb3/core").MoralisDataFormatted;
    expirationTime: Date | undefined;
    id: string;
    domain: string;
    statement?: string | undefined;
    uri: string;
    notBefore?: string | undefined;
    resources?: string[] | undefined;
    version: string;
    nonce: string;
    profileId: string;
}, {
    message: string;
    signature: string;
}>>;
export {};
//# sourceMappingURL=verify.d.ts.map