"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MoralisStreamError = exports.MoralisAuthError = exports.MoralisApiError = exports.MoralisCoreError = exports.MoralisError = void 0;
var MoralisError = /** @class */ (function (_super) {
    __extends(MoralisError, _super);
    function MoralisError(_a) {
        var message = _a.message, code = _a.code, details = _a.details, cause = _a.cause;
        var _this = 
        // @ts-ignore Typescript does not recognise 'cause' ? OR we have wrong TS version
        _super.call(this, MoralisError.makeMessage(message, code), { cause: cause }) || this;
        _this.name = 'Moralis SDK Error';
        _this.isMoralisError = true;
        // Set prototype manually, as required since Typescript 2.2: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example
        Object.setPrototypeOf(_this, MoralisError.prototype);
        _this.code = code;
        _this.details = details;
        if (cause) {
            _this.cause = cause;
            if ('stack' in cause) {
                _this.stack = "".concat(_this.stack, "\nCAUSE: ").concat(cause.stack);
            }
        }
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisError);
        }
        return _this;
    }
    MoralisError.makeMessage = function (message, code) { return "[".concat(code, "] ").concat(message); };
    return MoralisError;
}(Error));
exports.MoralisError = MoralisError;
var MoralisCoreError = /** @class */ (function (_super) {
    __extends(MoralisCoreError, _super);
    function MoralisCoreError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis SDK Core Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisCoreError);
        }
        return _this;
    }
    return MoralisCoreError;
}(MoralisError));
exports.MoralisCoreError = MoralisCoreError;
var MoralisApiError = /** @class */ (function (_super) {
    __extends(MoralisApiError, _super);
    function MoralisApiError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis SDK API Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisApiError);
        }
        return _this;
    }
    return MoralisApiError;
}(MoralisError));
exports.MoralisApiError = MoralisApiError;
var MoralisAuthError = /** @class */ (function (_super) {
    __extends(MoralisAuthError, _super);
    function MoralisAuthError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis Auth Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisAuthError);
        }
        return _this;
    }
    return MoralisAuthError;
}(MoralisError));
exports.MoralisAuthError = MoralisAuthError;
var MoralisStreamError = /** @class */ (function (_super) {
    __extends(MoralisStreamError, _super);
    function MoralisStreamError(options) {
        var _this = _super.call(this, options) || this;
        _this.name = 'Moralis Stream Error';
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MoralisStreamError);
        }
        return _this;
    }
    return MoralisStreamError;
}(MoralisError));
exports.MoralisStreamError = MoralisStreamError;
//# sourceMappingURL=MoralisError.js.map