/// <reference types="node" />
import { MoralisCore } from '../../MoralisCore';
export interface RequestOptions {
    headers?: {
        [name: string]: string;
    };
}
/**
 * A controller responsible to handle all requests in Moralis,
 * compatible with browser, nodejJs and react-native
 */
export declare class RequestController {
    private readonly logger;
    static create(core: MoralisCore): RequestController;
    private constructor();
    private request;
    private makeError;
    post<Response, Body extends Record<string, unknown>>(url: string, searchParams?: Record<string, unknown>, body?: Body, options?: RequestOptions, abortSignal?: AbortController['signal']): Promise<Response>;
    put<Response, Body extends Record<string, unknown>>(url: string, searchParams?: Record<string, unknown>, body?: Body, options?: RequestOptions, abortSignal?: AbortController['signal']): Promise<Response>;
    get<Response>(url: string, searchParams?: Record<string, unknown>, options?: RequestOptions, abortSignal?: AbortController['signal']): Promise<Response>;
    delete<Response, Body extends Record<string, unknown>>(url: string, searchParams?: Record<string, unknown>, body?: Body, options?: RequestOptions, abortSignal?: AbortController['signal']): Promise<Response>;
}
//# sourceMappingURL=RequestController.d.ts.map