import { AxiosError } from 'axios';
declare type ApiRequestError = AxiosError<{
    message?: string | string[];
}> & {
    response: NonNullable<AxiosError<{
        message: string | string[];
        details?: Record<string, unknown>;
    }>['response']>;
};
/**
 * Verify if the error is an AxiosError that is caused by a HTTP API error.
 */
export declare const isApiRequestError: (error: unknown) => error is ApiRequestError;
/**
 * Extract the message from a ApiRequestError. Note that this is implemented based on how the Moralis APIs return Errors.
 * This can be in the form:
 * - { message: 'some message' }
 * - { message: ['some message', 'some other message'] }
 * - { }
 */
export declare const getMessageFromApiRequestError: (error: ApiRequestError) => string;
export {};
//# sourceMappingURL=ApiRequestError.d.ts.map