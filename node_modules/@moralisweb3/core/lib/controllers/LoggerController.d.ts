import { LogLevel } from '../Config/CoreConfig';
import { Config } from '../Config';
import { MoralisCore } from '../MoralisCore';
declare type Details = Record<string, unknown>;
/**
 * LoggerController, responsible to create log messages for each module.
 * It should be created with the name of the module like `new Logger('module-name')`
 * It will then prefix any logs with that module-name for easy debugging
 * It will show only logs up to the specified `logLevel` in the MoralisConfig
 */
export declare class LoggerController {
    private readonly moduleName;
    private readonly config;
    static create(moduleName: string, core: MoralisCore): LoggerController;
    constructor(moduleName: string, config: Config);
    get level(): LogLevel;
    private _transport;
    private _shouldLog;
    _makeLogMessage(message: string): string;
    error(error: Error | string, details?: Details): void;
    warn(message: string, details?: Details): void;
    info(message: string, details?: Details): void;
    debug(message: string, details?: Details): void;
    verbose(message: string, details?: Details): void;
}
export {};
//# sourceMappingURL=LoggerController.d.ts.map