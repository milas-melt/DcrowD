"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiModule = void 0;
var ModuleType_1 = require("./ModuleType");
var Module_1 = require("./Module");
/**
 * The base class of every Moralis Api class that gets registered as a module via MoralisModules
 * It should always be created with:
 * - `name`: name of the module (should be unique)
 * - `core`: the MoralisCore instance
 * - `baseUrl`: the base url where of the api
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var ApiModule = /** @class */ (function (_super) {
    __extends(ApiModule, _super);
    function ApiModule(name, core, baseUrl) {
        var _this = _super.call(this, name, core, ModuleType_1.ModuleType.API) || this;
        _this.baseUrl = baseUrl;
        return _this;
    }
    return ApiModule;
}(Module_1.Module));
exports.ApiModule = ApiModule;
//# sourceMappingURL=ApiModule.js.map