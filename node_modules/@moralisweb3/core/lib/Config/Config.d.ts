export declare class Config {
    private readonly items;
    registerKey<Value>(key: ConfigKey<Value>, validator?: ConfigKeyValidator<Value>): void;
    getKeys(): string[];
    hasKey<Value>(key: ConfigKey<Value>): boolean;
    get<Value>(keyOrName: ConfigKey<Value> | string): Value;
    set<Value>(keyOrName: ConfigKey<Value> | string, value: Value): void;
    merge(values: ConfigValues): void;
    reset(): void;
    private getItem;
}
export declare type ConfigKeyValidator<Value> = (value: Value) => string | null;
export interface ConfigValues {
    [keyName: string]: any;
}
export interface ConfigKey<Value> {
    name: string;
    defaultValue: Value;
}
//# sourceMappingURL=Config.d.ts.map