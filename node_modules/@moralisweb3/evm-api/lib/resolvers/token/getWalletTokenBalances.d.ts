import { Camelize } from '@moralisweb3/core';
import { Erc20Value, EvmAddressish, EvmChainish } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'getWalletTokenBalances';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = QueryParams & PathParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'address'>> {
    chain?: EvmChainish;
    address: EvmAddressish;
}
export declare const getWalletTokenBalances: import("@moralisweb3/api-utils").EndpointFactory<ApiParams, Params, {
    token_address: string;
    name: string;
    symbol: string;
    logo?: string | undefined;
    thumbnail?: string | undefined;
    decimals: number;
    balance: string;
}[], Erc20Value[], ({
    value: string;
    token: {
        contractAddress: string;
        chain: string | number;
        decimals: number;
        name: string;
        symbol: string;
        logo?: string | null | undefined;
        logoHash?: string | null | undefined;
        thumbnail?: string | null | undefined;
    };
} | {
    value: string;
    token?: undefined;
})[]>;
export {};
//# sourceMappingURL=getWalletTokenBalances.d.ts.map