import { Camelize } from '@moralisweb3/core';
import { EvmChainish, EvmAddressish, Erc20Transfer } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
import { PaginatedParams } from '@moralisweb3/api-utils';
declare type operation = 'getWalletTokenTransfers';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = QueryParams & PathParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'address'>>, PaginatedParams {
    chain?: EvmChainish;
    address: EvmAddressish;
}
export declare const getWalletTokenTransfers: import("@moralisweb3/api-utils").PaginatedEndpointFactory<ApiParams, Params, {
    transaction_hash: string;
    address: string;
    block_timestamp: string;
    block_number: string;
    block_hash: string;
    to_address: string;
    from_address: string;
    value: string;
}[] | undefined, Erc20Transfer[], {
    chain: string | number;
    address: string;
    blockNumber: string;
    toAddress: string;
    fromAddress: string;
    value: string;
    transactionHash: string;
    blockTimestamp: Date;
    blockHash: string;
}[]>;
export {};
//# sourceMappingURL=getWalletTokenTransfers.d.ts.map