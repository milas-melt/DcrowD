"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTokenAllowance = void 0;
var core_1 = require("@moralisweb3/core");
var evm_utils_1 = require("@moralisweb3/evm-utils");
var api_utils_1 = require("@moralisweb3/api-utils");
var EvmChainResolver_1 = require("../EvmChainResolver");
exports.getTokenAllowance = (0, api_utils_1.createEndpointFactory)(function (core) {
    return (0, api_utils_1.createEndpoint)({
        name: 'getTokenAllowance',
        urlParams: ['address'],
        getUrl: function (params) { return "/erc20/".concat(params.address, "/allowance"); },
        apiToResult: function (data) { return ({
            allowance: core_1.BigNumber.create(data.allowance),
        }); },
        resultToJson: function (data) { return ({
            allowance: data.allowance.toString(),
        }); },
        parseParams: function (params) { return (__assign(__assign({}, params), { chain: EvmChainResolver_1.EvmChainResolver.resolve(params.chain, core).apiHex, address: evm_utils_1.EvmAddress.create(params.address, core).lowercase, owner_address: evm_utils_1.EvmAddress.create(params.ownerAddress, core).lowercase, spender_address: evm_utils_1.EvmAddress.create(params.spenderAddress, core).lowercase })); },
    });
});
//# sourceMappingURL=getTokenAllowance.js.map