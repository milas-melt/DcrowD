import { Camelize } from '@moralisweb3/core';
import { Erc20Token, EvmAddress, EvmAddressish, EvmChainish } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'getPairAddress';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = PathParams & QueryParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'token0_address' | 'token1_address'>> {
    chain?: EvmChainish;
    token0Address: EvmAddressish;
    token1Address: EvmAddressish;
}
export declare const getPairAddress: import("@moralisweb3/api-utils").EndpointFactory<ApiParams, Params, {
    token0?: {
        address?: string | undefined;
        name?: string | undefined;
        symbol?: string | undefined;
        decimals?: string | undefined;
        logo?: string | undefined;
        logo_hash?: string | undefined;
        thumbnail?: string | undefined;
        block_number?: string | undefined;
        validated?: number | undefined;
        created_at?: string | undefined;
    } | undefined;
    token1?: {
        address?: string | undefined;
        name?: string | undefined;
        symbol?: string | undefined;
        decimals?: string | undefined;
        logo?: string | undefined;
        logo_hash?: string | undefined;
        thumbnail?: string | undefined;
        block_number?: string | undefined;
        validated?: number | undefined;
        created_at?: string | undefined;
    } | undefined;
    pairAddress?: string | undefined;
}, {
    token0: {
        token: Erc20Token;
        blockNumber: string | undefined;
        validated: number | undefined;
        createdAt: Date | undefined;
    };
    token1: {
        token: Erc20Token;
        blockNumber: string | undefined;
        validated: number | undefined;
        createdAt: Date | undefined;
    };
    pairAddress: EvmAddress | undefined;
}, {
    token0: {
        token: {
            contractAddress: string;
            chain: string | number;
            decimals: number;
            name: string;
            symbol: string;
            logo?: string | null | undefined;
            logoHash?: string | null | undefined;
            thumbnail?: string | null | undefined;
        };
        blockNumber: string | undefined;
        validated: number | undefined;
        createdAt: Date | undefined;
    };
    token1: {
        token: {
            contractAddress: string;
            chain: string | number;
            decimals: number;
            name: string;
            symbol: string;
            logo?: string | null | undefined;
            logoHash?: string | null | undefined;
            thumbnail?: string | null | undefined;
        };
        blockNumber: string | undefined;
        validated: number | undefined;
        createdAt: Date | undefined;
    };
    pairAddress: string | undefined;
}>;
export {};
//# sourceMappingURL=getPairAddress.d.ts.map