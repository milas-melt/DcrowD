import { PaginatedParams } from '@moralisweb3/api-utils';
import { Camelize } from '@moralisweb3/core';
import { EvmChainish, EvmAddressish, EvmEvent } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'getContractEvents';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = QueryParams & PathParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'address'>>, PaginatedParams {
    chain?: EvmChainish;
    address: EvmAddressish;
    abi: unknown;
}
export declare const getContractEvents: import("@moralisweb3/api-utils").PaginatedEndpointFactory<{
    chain: "0x1" | "0x3" | "0x4" | "0x5" | "0x2a" | "0x89" | "0x13881" | "0x38" | "0x61" | "0xa86a" | "0xa869" | "0xfa" | "cronos" | "0x19";
    from_block: number | undefined;
    to_block: number | undefined;
    from_date: string | undefined;
    to_date: string | undefined;
    providerUrl: string | undefined;
    topic: string;
    limit: number | undefined;
    offset: number | undefined;
    subdomain: string | undefined;
    address: string;
    abi: unknown;
}, Params, {
    transaction_hash: string;
    address: string;
    block_timestamp: string;
    block_number: string;
    block_hash: string;
    data: {
        from?: string | undefined;
        to?: string | undefined;
        value?: string | undefined;
    };
}[] | undefined, EvmEvent[], EvmEvent[]>;
export {};
//# sourceMappingURL=getContractEvents.d.ts.map