"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getContractLogs = void 0;
var api_utils_1 = require("@moralisweb3/api-utils");
var core_1 = require("@moralisweb3/core");
var evm_utils_1 = require("@moralisweb3/evm-utils");
var EvmChainResolver_1 = require("../EvmChainResolver");
exports.getContractLogs = (0, api_utils_1.createPaginatedEndpointFactory)(function (core) {
    return (0, api_utils_1.createPaginatedEndpoint)({
        name: 'getContractLogs',
        urlParams: ['address'],
        getUrl: function (params) { return "/".concat(params.address, "/logs"); },
        apiToResult: function (data) {
            var _a;
            return ((_a = data.result) !== null && _a !== void 0 ? _a : []).map(function (log) {
                return evm_utils_1.EvmTransactionLog.create(__assign(__assign({}, (0, core_1.toCamelCase)(log)), { 
                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                    topics: [log.topic0, log.topic1, log.topic2, log.topic3], blockNumber: Number(log.block_number), chain: log.chainId }), core);
            });
        },
        resultToJson: function (data) { return data.map(function (log) { return log.toJSON(); }); },
        parseParams: function (params) { return (__assign(__assign({}, params), { block_number: params.blockNumber, from_block: params.fromBlock, to_block: params.toBlock, from_date: params.fromDate, to_date: params.toDate, chain: EvmChainResolver_1.EvmChainResolver.resolve(params.chain, core).apiHex, address: evm_utils_1.EvmAddress.create(params.address, core).lowercase })); },
    });
});
//# sourceMappingURL=getContractLogs.js.map