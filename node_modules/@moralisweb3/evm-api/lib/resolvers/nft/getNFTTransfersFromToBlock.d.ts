import { PaginatedParams } from '@moralisweb3/api-utils';
import { Camelize } from '@moralisweb3/core';
import { EvmChainish, EvmNftTransfer } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'getNFTTransfersFromToBlock';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type ApiParams = QueryParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain'>>, PaginatedParams {
    chain?: EvmChainish;
}
export declare const getNFTTransfersFromToBlock: import("@moralisweb3/api-utils").PaginatedEndpointFactory<{
    chain?: "eth" | "0x1" | "ropsten" | "0x3" | "rinkeby" | "0x4" | "goerli" | "0x5" | "kovan" | "0x2a" | "sepolia" | "0xaa36a7" | "polygon" | "0x89" | "mumbai" | "0x13881" | "bsc" | "0x38" | "bsc testnet" | "0x61" | "avalanche" | "0xa86a" | "avalanche testnet" | "0xa869" | "fantom" | "0xfa" | "cronos" | "0x19" | "cronos testnet" | "0x152" | undefined;
    from_block?: number | undefined;
    to_block?: number | undefined;
    from_date?: string | undefined;
    to_date?: string | undefined;
    format?: "decimal" | "hex" | undefined;
    limit?: number | undefined;
    cursor?: string | undefined;
}, Params, {
    token_address: string;
    token_id: string;
    from_address?: string | undefined;
    to_address: string;
    value?: string | undefined;
    amount?: string | undefined;
    contract_type: string;
    block_number: string;
    block_timestamp: string;
    block_hash: string;
    transaction_hash: string;
    transaction_type?: string | undefined;
    transaction_index?: number | undefined;
    log_index: number;
    operator?: string | undefined;
}[], EvmNftTransfer[], {
    chain: string | number;
    blockNumber: string;
    fromAddress: string | undefined;
    toAddress: string;
    tokenAddress: string;
    value: string | undefined;
    operator: string | undefined;
    amount?: number | undefined;
    blockHash: string;
    blockTimestamp: Date;
    contractType: string;
    logIndex: number;
    tokenId: string;
    transactionHash: string;
    transactionIndex?: number | undefined;
    transactionType?: string | undefined;
}[]>;
export {};
//# sourceMappingURL=getNFTTransfersFromToBlock.d.ts.map