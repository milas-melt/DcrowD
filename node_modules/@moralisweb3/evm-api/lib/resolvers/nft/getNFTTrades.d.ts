import { PaginatedParams } from '@moralisweb3/api-utils';
import { Camelize } from '@moralisweb3/core';
import { EvmChainish, EvmAddressish, EvmNftTrade } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'getNFTTrades';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = QueryParams & PathParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'address'>>, PaginatedParams {
    chain?: EvmChainish;
    address: EvmAddressish;
}
export declare const getNFTTrades: import("@moralisweb3/api-utils").PaginatedEndpointFactory<ApiParams, Params, ({
    transaction_hash: string;
    transaction_index: string;
    token_ids: unknown[];
    seller_address: string;
    buyer_address: string;
    marketplace_address: string;
    price: string;
    block_timestamp: string;
    block_number: string;
    block_hash: string;
} & {
    token_address: unknown;
})[] | undefined, EvmNftTrade[], {
    chain: string | number;
    sellerAddress: string;
    buyerAddress: string;
    marketplaceAddress: string;
    tokenAddress: string;
    priceTokenAddress: string | undefined;
    blockNumber: string;
    price: string;
    blockTimestamp: string;
    transactionHash: string;
    transactionIndex: number;
    tokenIds: string[];
    blockHash: string;
}[]>;
export {};
//# sourceMappingURL=getNFTTrades.d.ts.map