import { EvmAddressish, EvmChainish, EvmNftMetadata } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'getNFTContractMetadata';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = QueryParams & PathParams;
export interface Params {
    chain?: EvmChainish;
    address: EvmAddressish;
}
export declare const getNFTContractMetadata: import("@moralisweb3/api-utils").EndpointFactory<ApiParams, Params, {
    token_address: string;
    name: string;
    synced_at?: string | undefined;
    symbol: string;
    contract_type: string;
}, EvmNftMetadata, {
    chain: string | number;
    tokenAddress: string;
    name: string;
    symbol: string;
    contractType?: string | undefined;
    syncedAt?: Date | undefined;
}>;
export {};
//# sourceMappingURL=getNFTContractMetadata.d.ts.map