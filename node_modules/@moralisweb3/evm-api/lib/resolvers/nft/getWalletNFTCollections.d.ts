import { Camelize } from '@moralisweb3/core';
import { EvmChainish, EvmAddressish, EvmNftCollection } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
import { PaginatedParams } from '@moralisweb3/api-utils';
declare type operation = 'getWalletNFTCollections';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type PathParams = operations[operation]['parameters']['path'];
declare type ApiParams = QueryParams & PathParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'address'>>, PaginatedParams {
    chain?: EvmChainish;
    address: EvmAddressish;
}
export declare const getWalletNFTCollections: import("@moralisweb3/api-utils").PaginatedEndpointFactory<ApiParams, Params, {
    token_address: string;
    contract_type: string;
    name: string;
    symbol: string;
}[] | undefined, EvmNftCollection[], {
    chain: string | number;
    tokenAddress: string;
    contractType?: string | undefined;
    name: string;
    symbol: string;
}[]>;
export {};
//# sourceMappingURL=getWalletNFTCollections.d.ts.map