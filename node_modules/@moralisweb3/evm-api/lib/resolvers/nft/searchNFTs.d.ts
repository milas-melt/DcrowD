import { PaginatedParams } from '@moralisweb3/api-utils';
import { Camelize } from '@moralisweb3/core';
import { EvmChainish, EvmAddressish, EvmNft } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare type operation = 'searchNFTs';
declare type QueryParams = operations[operation]['parameters']['query'];
declare type ApiParams = QueryParams;
export interface Params extends Camelize<Omit<ApiParams, 'chain' | 'addresses'>>, PaginatedParams {
    chain?: EvmChainish;
    addresses?: EvmAddressish[];
}
export declare const searchNFTs: import("@moralisweb3/api-utils").PaginatedEndpointFactory<{
    chain?: "eth" | "0x1" | "ropsten" | "0x3" | "rinkeby" | "0x4" | "goerli" | "0x5" | "kovan" | "0x2a" | "sepolia" | "0xaa36a7" | "polygon" | "0x89" | "mumbai" | "0x13881" | "bsc" | "0x38" | "bsc testnet" | "0x61" | "avalanche" | "0xa86a" | "avalanche testnet" | "0xa869" | "fantom" | "0xfa" | "cronos" | "0x19" | "cronos testnet" | "0x152" | undefined;
    format?: "decimal" | "hex" | undefined;
    q: string;
    filter?: "name" | "description" | "attributes" | "global" | "name,description" | "name,attributes" | "description,attributes" | "name,description,attributes" | undefined;
    from_block?: number | undefined;
    to_block?: number | undefined;
    from_date?: string | undefined;
    to_date?: string | undefined;
    addresses?: string[] | undefined;
    cursor?: string | undefined;
    limit?: number | undefined;
}, Params, {
    token_id: string;
    token_address: string;
    token_uri: string;
    metadata: string;
    is_valid: number;
    syncing: number;
    frozen: number;
    resyncing: number;
    contract_type: string;
    token_hash: string;
    batch_id: string;
    metadata_name: string;
    metadata_description: string;
    metadata_attributes: string;
    block_number_minted: string;
    opensea_lookup?: {
        [key: string]: unknown;
    } | undefined;
    minter_address: string;
    transaction_minted: string;
    frozen_log_index?: {
        [key: string]: unknown;
    } | undefined;
    imported?: {
        [key: string]: unknown;
    } | undefined;
    last_token_uri_sync: string;
    last_metadata_sync: string;
    createdAt: string;
    updatedAt: string;
}[] | undefined, {
    token: EvmNft;
    tokenHash: string;
    blockNumberMinted: string;
    lastMetadataSync: Date | undefined;
    lastTokenUriSync: Date | undefined;
    batchId: string;
    frozen: number;
    frozenLogIndex: {
        [key: string]: unknown;
    } | undefined;
    imported: {
        [key: string]: unknown;
    } | undefined;
    isValid: number;
    openseaLookup: {
        [key: string]: unknown;
    } | undefined;
    resyncing: number;
    syncing: number;
    updatedAt: Date;
}[], {
    token: {
        tokenAddress: string;
        chain: string | number;
        ownerOf: string | undefined;
        blockNumberMinted: string | undefined;
        blockNumber: string | undefined;
        tokenId: string | number;
        contractType?: string | undefined;
        tokenUri?: string | undefined;
        tokenHash?: string | undefined;
        metadata?: import("@moralisweb3/core").MoralisDataObjectValue | undefined;
        name?: string | undefined;
        symbol?: string | undefined;
        lastMetadataSync?: Date | undefined;
        lastTokenUriSync?: Date | undefined;
        amount?: number | undefined;
    };
    lastMetadataSync: string | undefined;
    lastTokenUriSync: string | undefined;
    updatedAt: string;
    tokenHash: string;
    blockNumberMinted: string;
    batchId: string;
    frozen: number;
    frozenLogIndex: {
        [key: string]: unknown;
    } | undefined;
    imported: {
        [key: string]: unknown;
    } | undefined;
    isValid: number;
    openseaLookup: {
        [key: string]: unknown;
    } | undefined;
    resyncing: number;
    syncing: number;
}[]>;
export {};
//# sourceMappingURL=searchNFTs.d.ts.map