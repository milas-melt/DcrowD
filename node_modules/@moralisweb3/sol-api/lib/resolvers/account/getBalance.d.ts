import { Camelize } from '@moralisweb3/core';
import { SolAddressish, SolNetworkish, SolNative } from '@moralisweb3/sol-utils';
import { operations } from '../../generated/types';
declare type Operation = 'balance';
declare type PathParams = operations[Operation]['parameters']['path'];
declare type ApiParams = PathParams;
export interface Params extends Camelize<Omit<ApiParams, 'network' | 'address'>> {
    network?: SolNetworkish;
    address: SolAddressish;
}
export declare const getBalance: import("@moralisweb3/api-utils").EndpointFactory<{
    network: "mainnet" | "devnet";
    address: string;
}, Params, {
    solana: string;
    lamports: string;
}, SolNative, string>;
export {};
//# sourceMappingURL=getBalance.d.ts.map