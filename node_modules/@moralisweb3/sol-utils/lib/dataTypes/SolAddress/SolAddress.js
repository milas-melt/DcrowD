"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolAddress = void 0;
var core_1 = require("@moralisweb3/core");
var web3_js_1 = require("@solana/web3.js");
/**
 * A representation of an address on the Solana network.
 *
 * Use this class any time you work with an address.
 *
 * @category DataType
 */
var SolAddress = /** @class */ (function () {
    function SolAddress(address) {
        this.address = address;
    }
    /**
     * Create a new instance of SolAddress from any valid address input.
     *
     * @example `const address = SolAddress.create("9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM")`
     * @throws an error when a passed address is invalid.
     */
    SolAddress.create = function (address) {
        return address instanceof SolAddress ? address : new SolAddress(SolAddress.parse(address));
    };
    SolAddress.parse = function (address) {
        try {
            var publicKey = new web3_js_1.PublicKey(address);
            return publicKey.toBase58();
        }
        catch (e) {
            throw new core_1.MoralisCoreError({
                code: core_1.CoreErrorCode.INVALID_ARGUMENT,
                message: "Invalid Solana address provided: ".concat(address),
                cause: e,
            });
        }
    };
    /**
     * Formats the address to a specific format.
     * Currently returns a string representing the address.
     * @example address.format(); // "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
     */
    SolAddress.prototype.format = function () {
        // TODO: add `format` argument
        return this.address;
    };
    /**
     * Checks the equality of the current address with another Solana address.
     * @example `address.equals("9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM")`
     * @example `address.equals(SolAddress.create("9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"))`
     */
    SolAddress.prototype.equals = function (address) {
        return this.address === SolAddress.create(address).address;
    };
    /**
     * @returns a string representing the address.
     * @example address.toString(); // "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
     */
    SolAddress.prototype.toString = function () {
        return this.address;
    };
    /**
     * @returns a string representing the address.
     * @example address.toJSON(); // "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM"
     */
    SolAddress.prototype.toJSON = function () {
        return this.address;
    };
    return SolAddress;
}());
exports.SolAddress = SolAddress;
//# sourceMappingURL=SolAddress.js.map