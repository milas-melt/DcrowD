import { Endpoints } from '@moralisweb3/api-utils';
import { UpdateStreamEvmParams } from '../resolvers';
export interface UpdateStreamEvmOptions extends UpdateStreamEvmParams {
    networkType?: 'evm';
}
export declare type UpdateStreamOptions = UpdateStreamEvmOptions;
export declare const makeUpdateStream: (endpoints: Endpoints) => ({ networkType, ...options }: UpdateStreamOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        anonymous?: boolean | undefined;
        constant?: boolean | undefined;
        inputs?: {
            name: string;
            type: string;
            indexed?: boolean | undefined;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        name?: string | undefined;
        outputs?: {
            name: string;
            type: string;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        payable?: boolean | undefined;
        stateMutability?: string | undefined;
        type: string;
        gas?: number | undefined;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    chainIds: string[];
    id: string;
    status: "active" | "paused" | "error";
    statusMessage: string;
}, {
    chains: import("@moralisweb3/evm-utils").EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        anonymous?: boolean | undefined;
        constant?: boolean | undefined;
        inputs?: {
            name: string;
            type: string;
            indexed?: boolean | undefined;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        name?: string | undefined;
        outputs?: {
            name: string;
            type: string;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        payable?: boolean | undefined;
        stateMutability?: string | undefined;
        type: string;
        gas?: number | undefined;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    chainIds: string[];
    id: string;
    status: import("@moralisweb3/core").Camelize<"active" | "paused" | "error">;
    statusMessage: string;
}, {
    chainIds: (string | number)[];
    chains: import("@moralisweb3/evm-utils").EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        anonymous?: boolean | undefined;
        constant?: boolean | undefined;
        inputs?: {
            name: string;
            type: string;
            indexed?: boolean | undefined;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        name?: string | undefined;
        outputs?: {
            name: string;
            type: string;
            components?: any[] | undefined;
            internalType?: string | undefined;
        }[] | undefined;
        payable?: boolean | undefined;
        stateMutability?: string | undefined;
        type: string;
        gas?: number | undefined;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    id: string;
    status: import("@moralisweb3/core").Camelize<"active" | "paused" | "error">;
    statusMessage: string;
}, UpdateStreamEvmParams>>;
//# sourceMappingURL=update.d.ts.map