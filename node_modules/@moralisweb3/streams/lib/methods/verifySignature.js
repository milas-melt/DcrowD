"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeVerifySignature = void 0;
var api_utils_1 = require("@moralisweb3/api-utils");
var core_1 = require("@moralisweb3/core");
var sha3_1 = require("../utils/sha3");
var makeVerifySignature = function (core) {
    return function (_a) {
        var body = _a.body, signature = _a.signature;
        var apiKey = core.config.get(api_utils_1.ApiConfig.apiKey);
        if (!apiKey) {
            throw new core_1.MoralisStreamError({
                code: core_1.StreamErrorCode.GENERIC_STREAM_ERROR,
                message: 'unable to verify signature without an api key',
            });
        }
        var generatedSignature = (0, sha3_1.sha3)(JSON.stringify(body) + apiKey);
        if (signature !== generatedSignature) {
            throw new core_1.MoralisStreamError({
                code: core_1.StreamErrorCode.INVALID_SIGNATURE,
                message: 'signature is not valid',
            });
        }
        return true;
    };
};
exports.makeVerifySignature = makeVerifySignature;
//# sourceMappingURL=verifySignature.js.map