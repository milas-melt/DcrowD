import { Endpoints } from '@moralisweb3/api-utils';
import { AddAddressEvmParams } from '../resolvers/evmStreams/addAddressEvm';
export interface AddAddressEvmOptions extends AddAddressEvmParams {
    networkType?: 'evm';
}
export declare type AddAddressOptions = AddAddressEvmOptions;
export declare const makeAddAddress: (endpoints: Endpoints) => ({ networkType, ...options }: AddAddressOptions) => Promise<import("@moralisweb3/api-utils").ApiResultAdapter<{
    streamId: string;
    address: string & (string | undefined)[];
}, {
    address: import("@moralisweb3/evm-utils").EvmAddress | import("@moralisweb3/evm-utils").EvmAddress[] | undefined;
    streamId: string;
}, {
    address: string | string[] | undefined;
    streamId: string;
}, Omit<{
    id: string;
} & {
    address: string & (string | undefined)[];
}, "address"> & {
    address: string | string[];
}>>;
//# sourceMappingURL=addAddress.d.ts.map