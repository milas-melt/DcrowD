"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addAddressEvm = void 0;
var api_utils_1 = require("@moralisweb3/api-utils");
var core_1 = require("@moralisweb3/core");
var evm_utils_1 = require("@moralisweb3/evm-utils");
var name = 'AddAddressToStream';
var method = 'post';
var bodyParams = ['address'];
exports.addAddressEvm = (0, api_utils_1.createEndpointFactory)(function () {
    return (0, api_utils_1.createEndpoint)({
        name: name,
        getUrl: function (params) { return "/streams/evm/".concat(params.id, "/address"); },
        apiToResult: function (apiData) {
            var data = (0, core_1.toCamelCase)(apiData);
            return __assign(__assign({}, data), { address: data.address
                    ? typeof data.address === 'string'
                        ? evm_utils_1.EvmAddress.create(data.address)
                        : data.address.map(function (address) { return evm_utils_1.EvmAddress.create(address); })
                    : undefined });
        },
        resultToJson: function (data) { return (__assign(__assign({}, data), { address: data.address
                ? Array.isArray(data.address)
                    ? data.address.map(function (address) { return address.format(); })
                    : data.address.format()
                : undefined })); },
        parseParams: function (params) { return params; },
        method: method,
        bodyParams: bodyParams,
    });
});
//# sourceMappingURL=addAddressEvm.js.map