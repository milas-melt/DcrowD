"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvmBlock = void 0;
var core_1 = require("@moralisweb3/core");
var EvmAddress_1 = require("../EvmAddress");
var EvmChain_1 = require("../EvmChain");
var EvmTransaction_1 = require("../EvmTransaction");
/**
 * The EvmBlock is a representation of a block.
 *
 * @category DataType
 */
var EvmBlock = /** @class */ (function () {
    function EvmBlock(data, core) {
        this._data = EvmBlock.parse(data, core);
    }
    /**
     * Create a new instance of EvmBlock from any valid transaction input
     * @param data - the EvmBlockish type
     * @example const transaction = EvmTransaction.create(data);
     */
    EvmBlock.create = function (data, core) {
        if (data instanceof EvmBlock) {
            return data;
        }
        var finalCore = core !== null && core !== void 0 ? core : core_1.MoralisCoreProvider.getDefault();
        return new EvmBlock(data, finalCore);
    };
    /**
     * Check the equality between two Evm blocks. It compares their hashes and blocks.
     * @param dataA - The first block to compare
     * @param dataB - The second block to compare
     * @example EvmTransaction.equals(dataA, dataB)
     */
    EvmBlock.equals = function (dataA, dataB) {
        var blockA = EvmBlock.create(dataA);
        var blockB = EvmBlock.create(dataB);
        if (!blockA._data.chain.equals(blockB._data.chain)) {
            return false;
        }
        if (blockA._data.hash !== blockB._data.hash) {
            return false;
        }
        return true;
    };
    /**
     * Checks the equality of the current block with another evm block
     * @param data - the block to compare with
     * @example
     * ```ts
     * block.equals(data)
     * ```
     */
    EvmBlock.prototype.equals = function (data) {
        return EvmBlock.equals(this, data);
    };
    /**
     * @returns a JSON represention of the block.
     * @example
     * ```
     * block.toJSON()
     * ```
     */
    EvmBlock.prototype.toJSON = function () {
        var data = this._data;
        return __assign(__assign({}, data), { number: data.number.toString(), difficulty: data.difficulty.toString(), totalDifficulty: data.totalDifficulty.toString(), size: data.size.toString(), gasLimit: data.gasLimit.toString(), gasUsed: data.gasUsed.toString(), chain: data.chain.format(), miner: data.miner.format(), transactions: data.transactions.map(function (transaction) { return transaction.toJSON(); }) });
    };
    /**
     * @returns a JSON represention of the block.
     * @example
     * ```
     * block.format()
     * ```
     */
    EvmBlock.prototype.format = function () {
        return this.toJSON();
    };
    Object.defineProperty(EvmBlock.prototype, "result", {
        /**
         * @returns all the data without casting it to JSON.
         * @example block.result
         */
        get: function () {
            return this._data;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "number", {
        /**
         * @returns the block number.
         * @example block.number // BigNumber
         */
        get: function () {
            return this._data.number;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "hash", {
        /**
         * @returns the block hash.
         * @example block.hash // "0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"
         */
        get: function () {
            return this._data.hash;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "timestamp", {
        /**
         * @returns the block timestamp.
         * @example block.timestamp // Date
         */
        get: function () {
            return this._data.timestamp;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "miner", {
        /**
         * @returns the block miner.
         * @example block.miner // EvmAddress
         */
        get: function () {
            return this._data.miner;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "difficulty", {
        /**
         * @returns the block difficulty.
         * @example block.difficulty // BigNumber
         */
        get: function () {
            return this._data.difficulty;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "totalDifficulty", {
        /**
         * @returns the block total difficulty.
         * @example block.totalDifficulty // BigNumber
         */
        get: function () {
            return this._data.totalDifficulty;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "size", {
        /**
         * @returns the block size.
         * @example block.size // BigNumber
         */
        get: function () {
            return this._data.size;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "gasLimit", {
        /**
         * @returns the block gas limit.
         * @example block.gasLimit // BigNumber
         */
        get: function () {
            return this._data.gasLimit;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "gasUsed", {
        /**
         * @returns the block gas used.
         * @example block.gasUsed // BigNumber
         */
        get: function () {
            return this._data.gasUsed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "transactions", {
        /**
         * @returns the block transactions.
         * @example block.transactions // EvmTransaction[]
         */
        get: function () {
            return this._data.transactions;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "chain", {
        /**
         * @returns the block chain.
         * @example block.chain // EvmChain
         */
        get: function () {
            return this._data.chain;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "transactionCount", {
        /**
         * @returns the block transaction count.
         * @example block.transactionCount // 252
         */
        get: function () {
            return this._data.transactionCount;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "transactionsRoot", {
        /**
         * @returns the block transactions root.
         * @example block.transactionsRoot // "0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27"
         */
        get: function () {
            return this._data.transactionsRoot;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "stateRoot", {
        /**
         * @returns the block state root.
         * @example block.stateRoot // "0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b"
         */
        get: function () {
            return this._data.stateRoot;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "receiptsRoot", {
        /**
         * @returns the block receipts root.
         * @example block.receiptsRoot // "0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23"
         */
        get: function () {
            return this._data.receiptsRoot;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "logsBloom", {
        /**
         * @returns the block logs bloom.
         * @example block.logsBloom // "0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf"
         */
        get: function () {
            return this._data.logsBloom;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "extraData", {
        /**
         * @returns the block extra data.
         * @example block.extraData // "0x65746865726d696e652d6575726f70652d7765737433"
         */
        get: function () {
            return this._data.extraData;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "parentHash", {
        /**
         * @returns the block parent hash.
         * @example block.parentHash // "0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045"
         */
        get: function () {
            return this._data.parentHash;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "sha3Uncles", {
        /**
         * @returns the block sha3Uncles.
         * @example block.sha3Uncles // "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"
         */
        get: function () {
            return this._data.sha3Uncles;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(EvmBlock.prototype, "nonce", {
        /**
         * @returns the block nonce.
         * @example block.nonce // "0xedeb2d8fd2b2bdec"
         */
        get: function () {
            return this._data.nonce;
        },
        enumerable: false,
        configurable: true
    });
    EvmBlock.parse = function (data, core) { return (__assign(__assign({}, data), { miner: EvmAddress_1.EvmAddress.create(data.miner, core), timestamp: (0, core_1.dateInputToDate)(data.timestamp), number: core_1.BigNumber.create(data.number), difficulty: core_1.BigNumber.create(data.difficulty), totalDifficulty: core_1.BigNumber.create(data.totalDifficulty), size: core_1.BigNumber.create(data.size), gasLimit: core_1.BigNumber.create(data.gasLimit), gasUsed: core_1.BigNumber.create(data.gasUsed), transactions: data.transactions.map(function (transaction) { return EvmTransaction_1.EvmTransaction.create(transaction, core); }), chain: EvmChain_1.EvmChain.create(data.chain, core), transactionCount: +data.transactionCount })); };
    return EvmBlock;
}());
exports.EvmBlock = EvmBlock;
//# sourceMappingURL=EvmBlock.js.map