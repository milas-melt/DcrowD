"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EndpointParamsReader = void 0;
var Endpoint_1 = require("./Endpoint");
var EndpointParamsReader = /** @class */ (function () {
    function EndpointParamsReader(endpoint) {
        this.endpoint = endpoint;
    }
    EndpointParamsReader.prototype.isBodyParam = function (param) {
        if (this.endpoint.method === 'get') {
            return false;
        }
        if (!this.endpoint.bodyParams || this.endpoint.bodyParams.length === 0) {
            return false;
        }
        return this.endpoint.bodyParams.includes(param);
    };
    EndpointParamsReader.prototype.isUrlParam = function (param) {
        return !!this.endpoint.urlParams && this.endpoint.urlParams.includes(param);
    };
    EndpointParamsReader.prototype.getSearchParams = function (params) {
        var _this = this;
        return Object.keys(params).reduce(function (result, key) {
            var _a;
            var paramKey = key;
            if (!params[paramKey] || _this.isBodyParam(key) || _this.isUrlParam(key)) {
                return result;
            }
            return __assign(__assign({}, result), (_a = {}, _a[key] = params[paramKey], _a));
        }, {});
    };
    EndpointParamsReader.prototype.getBodyParams = function (params) {
        var _this = this;
        if (this.endpoint.bodyType === Endpoint_1.EndpointBodyType.BODY && this.endpoint.bodyParams) {
            // TODO: delete `as unknown`
            var paramName = this.endpoint.bodyParams[0];
            return params[paramName];
        }
        return Object.keys(params).reduce(function (result, key) {
            var _a;
            // TODO: delete `as unknown`
            var paramName = key;
            if (!params[paramName] || !_this.isBodyParam(key)) {
                return result;
            }
            if (_this.endpoint.bodyType === Endpoint_1.EndpointBodyType.PROPERTY) {
                return __assign(__assign({}, result), (_a = {}, _a[key] = params[paramName], _a));
            }
            return result;
        }, {});
    };
    return EndpointParamsReader;
}());
exports.EndpointParamsReader = EndpointParamsReader;
//# sourceMappingURL=EndpointParamsReader.js.map