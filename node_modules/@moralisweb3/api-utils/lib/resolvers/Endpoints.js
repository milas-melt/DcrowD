"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Endpoints = void 0;
var EndpointResolver_1 = require("./EndpointResolver");
var PaginatedEndpointResolver_1 = require("./PaginatedEndpointResolver");
var Endpoints = /** @class */ (function () {
    function Endpoints(core, baseUrl) {
        this.core = core;
        this.baseUrl = baseUrl;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.endpoints = [];
    }
    Endpoints.prototype.createFetcher = function (factory) {
        var resolver = EndpointResolver_1.EndpointResolver.create(this.core, this.baseUrl, factory);
        this.endpoints.push(resolver.endpoint);
        return resolver.fetch;
    };
    Endpoints.prototype.createNullableFetcher = function (factory) {
        var resolver = EndpointResolver_1.EndpointResolver.create(this.core, this.baseUrl, factory);
        this.endpoints.push(resolver.endpoint);
        return resolver.fetchNullable;
    };
    Endpoints.prototype.createPaginatedFetcher = function (factory) {
        var resolver = PaginatedEndpointResolver_1.PaginatedEndpointResolver.create(this.core, this.baseUrl, factory);
        this.endpoints.push(resolver.endpoint);
        return resolver.fetch;
    };
    Endpoints.prototype.getDescriptors = function () {
        return this.endpoints.map(function (endpoint) {
            var urlPatternParamNames = endpoint.urlParams || [];
            // TODO: Endpoint<> type should have `urlPattern` property instead of `getUrl` method!
            // For example: .urlPattern = '/{token0Address}/{token1Address}/pairAddress'
            var urlParams = urlPatternParamNames.reduce(function (params, paramName) {
                params[paramName] = "{".concat(paramName, "}");
                return params;
            }, {});
            var urlPattern = endpoint.getUrl(urlParams);
            return {
                // DO NOT return baseUrl here!
                name: endpoint.name,
                urlPatternParamNames: urlPatternParamNames,
                urlPattern: urlPattern,
                method: endpoint.method || 'get',
                bodyParamNames: endpoint.bodyParams ? endpoint.bodyParams.map(String) : [],
            };
        });
    };
    return Endpoints;
}());
exports.Endpoints = Endpoints;
//# sourceMappingURL=Endpoints.js.map