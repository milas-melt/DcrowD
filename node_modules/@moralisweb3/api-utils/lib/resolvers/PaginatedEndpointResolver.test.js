"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ApiConfig_1 = require("../config/ApiConfig");
var axios_1 = __importDefault(require("axios"));
var evm_utils_1 = require("@moralisweb3/evm-utils");
var Endpoint_1 = require("./Endpoint");
var PaginatedEndpoint_1 = require("./PaginatedEndpoint");
var setup_1 = require("../test/setup");
var PaginatedEndpointResolver_1 = require("./PaginatedEndpointResolver");
var MOCK_API_KEY = 'test-api-key';
var API_ROOT = 'https://deep-index.moralis.io/api/v2';
var eventRawResult = {
    total: 10,
    page: 0,
    page_size: 2,
    cursor: 'cursor_string',
    result: [
        {
            transaction_hash: '0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09',
            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            block_timestamp: '2021-04-02T10:07:54.000Z',
            block_number: '12526958',
            block_hash: '0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86',
            data: {
                from: '0x54ff6974c715956a5049a123408bff91fbe29f01',
                to: '0x74de5d4fcbf63e00296fd95d33236b9794016631',
                value: '260103496340000000000',
            },
        },
    ],
};
var expectedAddress = '0xdAC17F958D2ee523a2206206994597C13D831ec7';
var ABI = {};
describe('PaginatedEndpointResolver', function () {
    var core;
    var resolver;
    beforeAll(function () {
        core = (0, setup_1.setupApi)();
        core.config.set(ApiConfig_1.ApiConfig.apiKey, MOCK_API_KEY);
        var mockRequest = jest.spyOn(axios_1.default, 'request');
        mockRequest.mockImplementation(function (options) {
            if (options.url === "".concat(API_ROOT, "/0xdAC17F958D2ee523a2206206994597C13D831ec7/events") &&
                options.method === 'POST') {
                return Promise.resolve({
                    data: eventRawResult,
                });
            }
            else {
                return Promise.reject("Invalid url: ".concat(options.url));
            }
        });
    });
    beforeEach(function () {
        resolver = PaginatedEndpointResolver_1.PaginatedEndpointResolver.create(core, API_ROOT, (0, PaginatedEndpoint_1.createPaginatedEndpointFactory)(function () {
            return (0, PaginatedEndpoint_1.createPaginatedEndpoint)({
                name: 'getContractEvents',
                getUrl: function (params) { return "/".concat(params.address, "/events"); },
                //   TODO: remove PaginatedResponse when api squad make swagger update
                apiToResult: function (data) {
                    return data.result.map(function (event) { return (__assign(__assign({}, event), { address: evm_utils_1.EvmAddress.create(event.address, core) })); });
                },
                resultToJson: function (data) { return data; },
                parseParams: function (params) { return ({
                    chain: evm_utils_1.EvmChain.create(params.chain || '0x1', core).apiHex,
                    from_block: params.fromBlock,
                    to_block: params.toBlock,
                    from_date: params.toDate,
                    to_date: params.toDate,
                    providerUrl: params.providerUrl,
                    topic: params.topic,
                    limit: params.limit,
                    offset: params.offset,
                    subdomain: params.subdomain,
                    address: evm_utils_1.EvmAddress.create(params.address, core).lowercase,
                    abi: params.abi,
                }); },
                method: 'post',
                bodyParams: ['abi'],
                bodyType: Endpoint_1.EndpointBodyType.BODY,
            });
        }));
    });
    it('should test api resolver functions with post request and pagination', function () { return __awaiter(void 0, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, resolver.fetch({
                        chain: 1,
                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
                        topic: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
                        limit: 2,
                        abi: ABI,
                    })];
                case 1:
                    response = _a.sent();
                    expect(response.raw.total).toStrictEqual(10);
                    expect(response.raw.page_size).toStrictEqual(2);
                    expect(response.raw.result).toStrictEqual(eventRawResult.result);
                    expect(response.result[0].address.format()).toBe(expectedAddress.toLowerCase());
                    return [2 /*return*/];
            }
        });
    }); });
    it('should test next call', function () { return __awaiter(void 0, void 0, void 0, function () {
        var response, callSpy, result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, resolver.fetch({
                        chain: 1,
                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
                        topic: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
                        limit: 2,
                        abi: ABI,
                    })];
                case 1:
                    response = _a.sent();
                    callSpy = jest.fn(function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, response.next()];
                            case 1: return [2 /*return*/, _a.sent()];
                        }
                    }); }); });
                    return [4 /*yield*/, callSpy()];
                case 2:
                    result = _a.sent();
                    expect(result.raw.total).toStrictEqual(10);
                    expect(result.raw.result).toStrictEqual(eventRawResult.result);
                    expect(callSpy).toBeCalledTimes(1);
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=PaginatedEndpointResolver.test.js.map