import MoralisCore from '@moralisweb3/core/lib';
import { Endpoint } from './Endpoint';
export interface PaginatedParams extends Record<string, unknown> {
    offset?: number;
    limit?: number;
    cursor?: string;
}
export interface PaginatedResult<ApiResult> {
    total: number;
    page: number;
    page_size: number;
    cursor: string;
    result: ApiResult;
}
export interface PaginatedEndpoint<ApiParams, Params extends PaginatedParams, ApiResult, AdaptedResult, JSONResult> extends Endpoint<ApiParams, Params, PaginatedResult<ApiResult>, AdaptedResult, JSONResult> {
}
export declare type PaginatedEndpointFactory<ApiParams, Params extends PaginatedParams, ApiResult, AdaptedResult, JSONResult> = (core: MoralisCore) => PaginatedEndpoint<ApiParams, Params, ApiResult, AdaptedResult, JSONResult>;
export declare function createPaginatedEndpointFactory<ApiParams, Params extends PaginatedParams, ApiResult, AdaptedResult, JSONResult>(factory: PaginatedEndpointFactory<ApiParams, Params, ApiResult, AdaptedResult, JSONResult>): PaginatedEndpointFactory<ApiParams, Params, ApiResult, AdaptedResult, JSONResult>;
export declare function createPaginatedEndpoint<ApiParams, Params extends PaginatedParams, ApiResult, AdaptedResult, JSONResult>(endpoint: PaginatedEndpoint<ApiParams, Params, ApiResult, AdaptedResult, JSONResult>): PaginatedEndpoint<ApiParams, Params, ApiResult, AdaptedResult, JSONResult>;
//# sourceMappingURL=PaginatedEndpoint.d.ts.map