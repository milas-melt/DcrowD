"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tryGetNextPageParams_1 = require("./tryGetNextPageParams");
describe('tryGetNextPageParams', function () {
    describe('cursor mode', function () {
        function createData(total, page, pageSize) {
            var currentParams = {
                cursor: '0x1',
            };
            var result = {
                total: total,
                page: page,
                page_size: pageSize,
                cursor: '0x2',
                result: null,
            };
            return [currentParams, result];
        }
        describe('firstPageIndex=1', function () {
            it('returns params when next page exists', function () {
                var _a = createData(950, 9, 100), currentParams = _a[0], result = _a[1];
                var nextParams = (0, tryGetNextPageParams_1.tryGetNextPageParams)(1, currentParams, result);
                expect(nextParams === null || nextParams === void 0 ? void 0 : nextParams.cursor).toEqual('0x2');
            });
            it('returns null when next page does not exist', function () {
                var _a = createData(950, 10, 100), currentParams = _a[0], result = _a[1];
                var nextParams = (0, tryGetNextPageParams_1.tryGetNextPageParams)(1, currentParams, result);
                expect(nextParams).toBeNull();
            });
        });
    });
    describe('offset mode', function () {
        function createData(total, page, pageSize) {
            var currentParams = {
                limit: 100,
                offset: 900,
            };
            var result = {
                total: total,
                page: page,
                page_size: pageSize,
                cursor: '',
                result: null,
            };
            return [currentParams, result];
        }
        describe('firstPageIndex=1', function () {
            it('returns params when next page exists', function () {
                var _a = createData(950, 9, 100), currentParams = _a[0], result = _a[1];
                var nextParams = (0, tryGetNextPageParams_1.tryGetNextPageParams)(1, currentParams, result);
                expect(nextParams === null || nextParams === void 0 ? void 0 : nextParams.offset).toEqual(1000);
            });
            it('returns null when next page does not exist', function () {
                var _a = createData(950, 10, 100), currentParams = _a[0], result = _a[1];
                var nextParams = (0, tryGetNextPageParams_1.tryGetNextPageParams)(1, currentParams, result);
                expect(nextParams).toBeNull();
            });
        });
    });
});
//# sourceMappingURL=tryGetNextPageParams.test.js.map